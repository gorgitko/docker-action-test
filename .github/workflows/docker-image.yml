name: Docker Image CI

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]
  release:
    types: [published]

env:
  IMAGE: jirinovo/docker-action-test
  TEST_TAG: test

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Debug
        run: |
          echo "github.ref -> ${{ github.ref }}"
          echo "github.ref_type -> ${{ github.ref_type }}"
          echo "github.ref_name -> ${{ github.ref_name }}"
          echo "github.event.release.tag_name -> ${{ github.event.release.tag_name }}
      - name: Check tag matches package version in DESCRIPTION
        if: github.event_name == 'release'
        run: |
          pkg_version="$(grep -P '^Version: \d+\.\d+\.\d+$' DESCRIPTION | cut -d' ' -f2)"
          echo "pkg_version: $pkg_version"
          test -n "$pkg_version" || (echo "'Version:' not found in DESCRIPTION" && false)
          test "v$pkg_version" = ${{ github.ref_name }} || (echo "'Version: $pkg_version' in DESCRIPTION does not match current git tag" && false)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.IMAGE }}:${{ env.TEST_TAG }}
      - name: Test
        run: docker run --rm -e TEST_VAR=1 ${{ env.IMAGE }}:${{ env.TEST_TAG }} sh /test.sh
      - name: Remove test image
        run: docker rmi ${{ env.IMAGE }}:${{ env.TEST_TAG }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:          
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=semver,pattern={{version}}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
